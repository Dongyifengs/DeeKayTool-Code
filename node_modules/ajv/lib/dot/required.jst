







{{## def.setupLoop:
  
    var  = validate.schema;
  

  {{
    var $i = 'i' + $lvl
      , $propertyPath = 'schema' + $lvl + '[' + $i + ']'
      , $missingProperty = '\' + ' + $propertyPath + ' + \'';
    if (it.opts._errorDataPathProperty) {
      it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);
    }
  }}
#}}


{{## def.isRequiredOwnProperty:
  Object.prototype.hasOwnProperty.call(, [])
#}}



  {{? $schema.length < it.opts.loopRequired &&
      it.schema.properties && Object.keys(it.schema.properties).length }}
    
    
      
      ) }}
        
      
    
  
    
  




  {{
    var $currentErrorPath = it.errorPath
      , $loopRequired = $isData || $required.length >= it.opts.loopRequired
      , $ownProperties = it.opts.ownProperties;
  }}

  
    var missing;
    
      
      var  = true;

      

      for (var  = 0;  < .length; ++) {
         = [[]] !== undefined
                      
                        && 
                      ;
        if (!) break;
      }

        }  

      
      else {
    
      if () {
        
      } else {
    
  
    
      
      
        if ( && !Array.isArray()) {
          
        } else if ( !== undefined) {
      

      for (var  = 0;  < .length; ++) {
        if ([[]] === undefined
            
              || !
            ) {
          
        }
      }

        }  
    
      
        
      
    
  

  


  if (true) {

