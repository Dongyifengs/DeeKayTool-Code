



{{## def.skipFormat:
   if (true) { 
  
#}}







{{## def.$dataCheckFormat:
  
  (
     ( && !
      
        && self._opts.unknownFormats.indexOf() == -1
      ) ||
   
   ( &&  == ''
                 && !(typeof  == 'function'
                     ? 
                        (async ? await () : ())
                       
                        ()
                       
                     : .test())))
#}}

{{## def.checkFormat:
  {{
    var $formatRef = 'formats' + it.util.getProperty($schema);
    if ($isObject) $formatRef += '.validate';
  }}
  
    ()
  
    .test()
  
#}}


{{
  var $unknownFormats = it.opts.unknownFormats
    , $allowUnknown = Array.isArray($unknownFormats);
}}


  {{
    var $format = 'format' + $lvl
      , $isObject = 'isObject' + $lvl
      , $formatType = 'formatType' + $lvl;
  }}
  var  = formats[];
  var  = typeof  == 'object'
                        && !( instanceof RegExp)
                        && .validate;
  var  =  && .type || 'string';
  if () {
    
      var async = .async;
    
     = .validate;
  }
  if () {

  
  
    
      
      
    
      
    
      
    
  
  {{
    var $isObject = typeof $format == 'object'
                    && !($format instanceof RegExp)
                    && $format.validate;
    var $formatType = $isObject && $format.type || 'string';
    if ($isObject) {
      var $async = $format.async === true;
      $format = $format.validate;
    }
  }}
  
    
  
  
    {{
      if (!it.async) throw new Error('async format in sync schema');
      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';
    }}
    if (!(await ())) {
  
    if (!) {
  

    
  }  else { 
