



{{## def._validateRef:_v:
  
    .call(this,
  
    (
  
    , , rootData)
#}}



  {{
    if (it.isRoot) {
      $async = it.async;
      $refCode = 'validate';
    } else {
      $async = it.root.schema.$async === true;
      $refCode = 'root.refVal[0]';
    }
  }}

  
  
    
    
      
      
       if (false) { 
    
      
       if (true) { 
    
      
    
  
    
    {{
      $it.schema = $refVal.schema;
      $it.schemaPath = '';
      $it.errSchemaPath = $schema;
    }}
    
    
    
      if () {
    
  
    {{
      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);
      $refCode = $refVal.code;
    }}
  



  
    
  

  
    
     var ; 
    try {
      await ;
        = true; 
    } catch (e) {
      if (!(e instanceof ValidationError)) throw e;
      if (vErrors === null) vErrors = e.errors;
      else vErrors = vErrors.concat(e.errors);
      errors = vErrors.length;
        = false; 
    }
     if () { 
  
    if (!) {
      if (vErrors === null) vErrors = .errors;
      else vErrors = vErrors.concat(.errors);
      errors = vErrors.length;
    }  else { 
  

